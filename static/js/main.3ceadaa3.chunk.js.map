{"version":3,"sources":["Todos.js","AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","todoList","length","map","todo","className","content","id","AddTodo","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addTodo","onSubmit","this","type","onChange","Component","App","deleteTodo","filter","Math","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAqBmBA,EAnBJ,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACPC,EAAWD,EAAME,OACnBF,EAAMG,KAAI,SAAAC,GAClB,OACI,qBAAKC,UAAU,mBAAf,SACC,+BAAOD,EAAKE,WAD0BF,EAAKG,OAOhD,mBAAGF,UAAU,SAAb,0CAEI,OACI,qBAAKA,UAAU,mBAAf,SACGJ,KCbUO,E,4MACrBC,MAAQ,CACLH,QAAQ,I,EAGXI,aAAe,SAACC,GAChB,EAAKC,SAAS,CACdN,QAASK,EAAEE,OAAOC,S,EAGlBC,aAAe,SAACJ,GACZA,EAAEK,iBACH,EAAKC,MAAMC,QAAQ,EAAKT,OACxB,EAAKG,SAAS,CACZN,QAAS,M,4CAGV,WACA,OACA,8BAEJ,uBAAMa,SAAWC,KAAKL,aAAtB,UACA,oDACA,uBAAOM,KAAK,OAAOC,SAAUF,KAAKV,aAAcI,MAAOM,KAAKX,MAAMH,mB,GAvB7BiB,aCDhBC,E,4MACnBf,MAAQ,CACNT,MAAM,CACJ,CAACO,GAAI,EAAGD,QAAS,WACjB,CAACC,GAAI,EAAGD,QAAS,Y,EAGvBmB,WAAa,SAAClB,GACd,IAAMP,EAAQ,EAAKS,MAAMT,MAAM0B,QAAO,SAAAtB,GACpC,OAAOA,EAAKG,KAAOA,KAErB,EAAKK,SAAS,CACXZ,W,EAGHkB,QAAU,SAACd,GACTA,EAAKG,GAAKoB,KAAKC,SACf,IAAI5B,EAAK,sBAAO,EAAKS,MAAMT,OAAlB,CAAyBI,IAClC,EAAKQ,SAAS,CACZZ,W,4CAGJ,WACI,OACE,sBAAKK,UAAU,qBAAf,UACE,oBAAIA,UAAU,mBAAd,oBACA,cAAC,EAAD,CAAOL,MAAOoB,KAAKX,MAAMT,MAAOyB,WAAYL,KAAKK,aACjD,cAAC,EAAD,CAASP,QAASE,KAAKF,iB,GA3BEK,aCSlBM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3ceadaa3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n const Todos = ({todos}) => {\r\n    const todoList = todos.length ? (\r\n        todos.map(todo => {\r\nreturn(\r\n    <div className=\"todos collection\" key={todo.id}>\r\n     <span>{todo.content}</span>   \r\n    </div>\r\n      )      \r\n    })\r\n) : (\r\n\r\n<p className=\"center\">You have no todos left, yay!</p>\r\n)\r\n    return (\r\n        <div className=\"todos collection\">\r\n          {todoList}  \r\n        </div>\r\n    )\r\n    }\r\n    export default Todos","import React, { Component } from 'react'\r\n\r\n\r\n\r\nexport default class AddTodo extends Component {\r\nstate = {\r\n   content:'' \r\n}\r\n\r\nhandleChange = (e) => {\r\nthis.setState({\r\ncontent: e.target.value\r\n });\r\n}\r\nhandleSubmit = (e) => {\r\n    e.preventDefault();\r\n   this.props.addTodo(this.state);\r\n   this.setState({\r\n     content: ''  \r\n   })\r\n}\r\n    render() {\r\n    return (\r\n    <div>\r\n\r\n<form onSubmit ={this.handleSubmit}>    \r\n<label>Add a new todo:</label>   \r\n<input type=\"text\" onChange={this.handleChange} value={this.state.content} />\r\n              </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Todos from './Todos'\r\nimport AddTodo from './AddTodo'\r\nexport default class App extends Component {\r\n  state = {\r\n    todos:[\r\n      {id: 1, content: 'Laundry'},\r\n      {id: 2, content: 'Vacuum'}\r\n    ]\r\n  }\r\ndeleteTodo = (id) => {\r\nconst todos = this.state.todos.filter(todo => {\r\n  return todo.id !== id\r\n  });\r\nthis.setState({\r\n   todos\r\n  });\r\n }\r\naddTodo = (todo) => {\r\n  todo.id = Math.random();\r\n  let todos = [...this.state.todos, todo];\r\n  this.setState({\r\n    todos\r\n  });\r\n}\r\nrender() {\r\n    return (\r\n      <div className=\"todo-app container\">\r\n        <h1 className=\"center blue-text\">Todo's</h1>\r\n        <Todos todos={this.state.todos} deleteTodo={this.deleteTodo} />\r\n        <AddTodo addTodo={this.addTodo} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}